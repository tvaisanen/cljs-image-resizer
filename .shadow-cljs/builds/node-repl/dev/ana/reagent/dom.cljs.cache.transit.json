["^ ","~:output",["^ ","~:js","goog.provide('reagent.dom');\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.imported !== 'undefined')){\n} else {\nreagent.dom.imported = null;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.roots !== 'undefined')){\n} else {\nreagent.dom.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nreagent.dom.unmount_comp = (function reagent$dom$unmount_comp(container){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\n\nreturn shadow.js.shim.module$react_dom.unmountComponentAtNode(container);\n});\nreagent.dom.render_comp = (function reagent$dom$render_comp(comp,container,callback){\nvar _STAR_always_update_STAR__orig_val__37097 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__37098 = true;\n(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__37098);\n\ntry{return shadow.js.shim.module$react_dom.render((comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)),container,(function (){\nvar _STAR_always_update_STAR__orig_val__37099 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__37100 = false;\n(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__37100);\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp,container], null));\n\nreagent.impl.batching.flush_after_render();\n\nif((!((callback == null)))){\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n} else {\nreturn null;\n}\n}finally {(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__37099);\n}}));\n}finally {(reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__37097);\n}});\nreagent.dom.re_render_component = (function reagent$dom$re_render_component(comp,container){\nreturn reagent.dom.render_comp(comp,container,null);\n});\n/**\n * Render a Reagent component into the DOM. The first argument may be\n *   either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n * \n *   Optionally takes a callback that is called when the component is in place.\n * \n *   Returns the mounted component instance.\n */\nreagent.dom.render = (function reagent$dom$render(var_args){\nvar G__37102 = arguments.length;\nswitch (G__37102) {\ncase 2:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(reagent.dom.render.cljs$core$IFn$_invoke$arity$2 = (function (comp,container){\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,null);\n}));\n\n(reagent.dom.render.cljs$core$IFn$_invoke$arity$3 = (function (comp,container,callback){\nreagent.ratom.flush_BANG_();\n\nvar f = (function (){\nreturn reagent.impl.template.as_element(((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\n});\nreturn reagent.dom.render_comp(f,container,callback);\n}));\n\n(reagent.dom.render.cljs$lang$maxFixedArity = 3);\n\nreagent.dom.unmount_component_at_node = (function reagent$dom$unmount_component_at_node(container){\nreturn reagent.dom.unmount_comp(container);\n});\n/**\n * Returns the root DOM node of a mounted component.\n */\nreagent.dom.dom_node = (function reagent$dom$dom_node(this$){\nreturn shadow.js.shim.module$react_dom.findDOMNode(this$);\n});\n(reagent.impl.template.find_dom_node = reagent.dom.dom_node);\n/**\n * Force re-rendering of all mounted Reagent components. This is\n *   probably only useful in a development environment, when you want to\n *   update components in response to some dynamic changes to code.\n * \n *   Note that force-update-all may not update root components. This\n *   happens if a component 'foo' is mounted with `(render [foo])` (since\n *   functions are passed by value, and not by reference, in\n *   ClojureScript). To get around this you'll have to introduce a layer\n *   of indirection, for example by using `(render [#'foo])` instead.\n */\nreagent.dom.force_update_all = (function reagent$dom$force_update_all(){\nreagent.ratom.flush_BANG_();\n\nvar seq__37104_37147 = cljs.core.seq(cljs.core.vals(cljs.core.deref(reagent.dom.roots)));\nvar chunk__37105_37148 = null;\nvar count__37106_37149 = (0);\nvar i__37107_37150 = (0);\nwhile(true){\nif((i__37107_37150 < count__37106_37149)){\nvar v_37151 = chunk__37105_37148.cljs$core$IIndexed$_nth$arity$2(null,i__37107_37150);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_37151);\n\n\nvar G__37152 = seq__37104_37147;\nvar G__37153 = chunk__37105_37148;\nvar G__37154 = count__37106_37149;\nvar G__37155 = (i__37107_37150 + (1));\nseq__37104_37147 = G__37152;\nchunk__37105_37148 = G__37153;\ncount__37106_37149 = G__37154;\ni__37107_37150 = G__37155;\ncontinue;\n} else {\nvar temp__5735__auto___37157 = cljs.core.seq(seq__37104_37147);\nif(temp__5735__auto___37157){\nvar seq__37104_37158__$1 = temp__5735__auto___37157;\nif(cljs.core.chunked_seq_QMARK_(seq__37104_37158__$1)){\nvar c__4591__auto___37159 = cljs.core.chunk_first(seq__37104_37158__$1);\nvar G__37160 = cljs.core.chunk_rest(seq__37104_37158__$1);\nvar G__37161 = c__4591__auto___37159;\nvar G__37162 = cljs.core.count(c__4591__auto___37159);\nvar G__37163 = (0);\nseq__37104_37147 = G__37160;\nchunk__37105_37148 = G__37161;\ncount__37106_37149 = G__37162;\ni__37107_37150 = G__37163;\ncontinue;\n} else {\nvar v_37164 = cljs.core.first(seq__37104_37158__$1);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_37164);\n\n\nvar G__37165 = cljs.core.next(seq__37104_37158__$1);\nvar G__37166 = null;\nvar G__37167 = (0);\nvar G__37168 = (0);\nseq__37104_37147 = G__37165;\nchunk__37105_37148 = G__37166;\ncount__37106_37149 = G__37167;\ni__37107_37150 = G__37168;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn \"Updated\";\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/dom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$shadow.js.shim.module$react","~$create-react-class","~$shadow.js.shim.module$create_react_class","~$react-dom","~$shadow.js.shim.module$react_dom"],"~:use-macros",["^ ","~$dbg","~$reagent.debug","~$$","~$reagent.interop","~$$!","^K"],"~:excludes",["~#set",[]],"~:name","~$reagent.dom","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^U","^K","^K","~$reagent.ratom","^V","~$cljs.core","^W","~$goog","^X","^G","^G","~$reagent.impl.template","^Y","~$reagent.impl.batching","^Z","~$util","^U","~$tmpl","^Y","~$ratom","^V","~$batch","^Z","^J","^J","^F","^G"],"~:seen",["^N",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^J","^J","^K","^K","^W","^W","^V","^V","^11","^V"],"~:form",["~#list",["~$ns","^P",["^18",["^14",["^F","~:as","^F"],["^U","^1:","^["],["^Y","^1:","^10"],["^Z","^1:","^12"],["^V","^1:","^11"],["^J","~:refer-macros",["^I"]],["^K","^1;",["~$$","^L"]]]]]],"~:flags",["^ ","^14",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^G","^U","^Y","^Z","^V","^J","^K"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","reagent/dom.cljs"],"~:compiled-at",1622054026656,"~:resource-name","reagent/dom.cljs","~:warnings",[],"~:source","(ns reagent.dom\n  (:require [react-dom :as react-dom]\n            [reagent.impl.util :as util]\n            [reagent.impl.template :as tmpl]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dbg]]\n            [reagent.interop :refer-macros [$ $!]]))\n\n(defonce ^:private imported nil)\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container [comp container])\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container nil))\n  ([comp container callback]\n   (ratom/flush!)\n   (let [f (fn []\n             (tmpl/as-element (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  [this]\n  (react-dom/findDOMNode this))\n\n(set! tmpl/find-dom-node dom-node)\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  []\n  (ratom/flush!)\n  (doseq [v (vals @roots)]\n    (apply re-render-component v))\n  \"Updated\")\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AASA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAmBC;;AAEnB,AAAA,AAAAH,AAAAC,AAAAG;AAAA;AAAA,AAAA,AAAmBC,AAAM,AAAA,AAACC;;AAE1B,AAAA,AAAOC,AAAcC;AAArB,AACE,AAACC,AAAMJ,AAAMK,AAAOF;;AACpB,AAACG,AAAiCH;;AAEpC,AAAA,AAAOI,AAAaC,AAAKL,AAAUM;AAAnC,AACE,AAAAC,AAAUE;AAAVD,AAAA;AAAA,AAAA,AAAAA,AAAUC;;AAAV,AAAA,AACE,AAACC,AAAiB,AAACL,AAAAA,AAAAA,AAAML,AACvB;AAAA,AACE,AAAAW,AAAUF;AAAVG,AAAA;AAAA,AAAA,AAAAA,AAAUH;;AAAV,AAAA,AACE,AAAA,AAACR,AAAMJ,AAAMgB,AAAMb,AAAWK,AAAKL;;AACnC,AAACc;;AACD,AAAI,AAAA,AAAA,AAAOR;AACT,AAACA,AAAAA,AAAAA;;AADH;;AAHF,AAAA,AAAAK,AAAUF;;AAHhB,AAAA,AAAAF,AAAUE;;AASZ,AAAA,AAAOM,AAAqBV,AAAKL;AAAjC,AACE,AAAA,AAACI,AAAYC,AAAKL;;AAEpB,AAAA;;;;;;;;AAAA,AAAAgB,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAOFb,AAAKL;AAPT,AAQG,AAAA,AAACoB,AAAOf,AAAKL;;;AARhB,AAAA,AAAA,AAAMkB,AASFb,AAAKL,AAAUM;AATnB,AAUG,AAACe;;AACD,AAAMC,AAAE;AAAA,AACE,AAACC,AAAgB,AAAI,AAACC,AAAInB,AAAM,AAACA,AAAAA,AAAAA,AAAMA;;AADjD,AAEE,AAACD,AAAYkB,AAAEtB,AAAUM;;;AAb9B,AAAA,AAAA,AAAMY;;AAAN,AAeA,AAAA,AAAMO,AAA2BzB;AAAjC,AACE,AAACD,AAAaC;;AAEhB;;;AAAA,AAAM0B,AAEHC;AAFH,AAGE,AAACC,AAAsBD;;AAEzB,AAAME,AAAmBH;AAEzB;;;;;;;;;;;AAAA,AAAMI;AAAN,AAWE,AAACT;;AACD,AAAAU,AAAA,AAAAC,AAAU,AAAA,AAAAa,AAACC,AAAMjD;AAAjBoC,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAAb;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAD;AAAA,AAAA,AAAAK;AAAA,AAAA,AAAAL,AAAAK;AAAA,AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAAO,AAAA,AAAAC,AAAAR;AAAA,AAAA,AAAA,AAAAS,AAAAT;AAAAO;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAX,AAAQa;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAA,AAAAD,AAAAZ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAZF","names",["js/reagent","js/reagent.dom","js/reagent.dom.imported","reagent.dom/imported","js/reagent.dom.roots","reagent.dom/roots","cljs.core.atom","reagent.dom/unmount-comp","container","cljs.core.swap_BANG_","cljs.core/dissoc","js/shadow.js.shim.module$react_dom.unmountComponentAtNode","reagent.dom/render-comp","comp","callback","*always-update*-orig-val__37097","*always-update*-temp-val__37098","reagent.impl.util/*always-update*","js/shadow.js.shim.module$react_dom.render","*always-update*-orig-val__37099","*always-update*-temp-val__37100","cljs.core/assoc","reagent.impl.batching/flush-after-render","reagent.dom/re-render-component","var_args","G__37102","reagent.dom/render","js/Error","reagent.dom.render","reagent.ratom/flush!","f","reagent.impl.template/as-element","cljs.core/fn?","reagent.dom/unmount-component-at-node","reagent.dom/dom-node","this","js/shadow.js.shim.module$react_dom.findDOMNode","reagent.impl.template/find-dom-node","reagent.dom/force-update-all","seq__37104","cljs.core/seq","chunk__37105","count__37106","i__37107","temp__5735__auto__","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","v","cljs.core/deref","cljs.core/vals","cljs.core.apply"]],"~:used-vars",["^N",["~$reagent.impl.template/find-dom-node","~$reagent.dom/imported","~$reagent.dom/unmount-component-at-node","~$js/reagent.dom.roots","~$cljs.core/count","~$cljs.core/apply","~$reagent.ratom/flush!","~$cljs.core/dissoc","~$cljs.core/chunk-rest","~$cljs.core/atom","~$js/reagent","~$reagent.impl.batching/flush-after-render","~$reagent.dom/roots","~$js/reagent.dom.imported","~$cljs.core/swap!","~$reagent.impl.util/*always-update*","~$reagent.dom/unmount-comp","~$reagent.dom/render","~$js/shadow.js.shim.module$react_dom.unmountComponentAtNode","~$js/shadow.js.shim.module$react_dom.render","~$js/reagent.dom","~$cljs.core/next","~$js/shadow.js.shim.module$react_dom.findDOMNode","~$reagent.dom/re-render-component","~$reagent.dom/dom-node","~$cljs.core/not","~$cljs.core/assoc","~$reagent.dom/force-update-all","~$js/Error","~$reagent.dom/render-comp","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1@","reagent/impl/batching.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^X","^W","^J","^K","^U","~$clojure.string"]]],["^1@","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","~$goog.dom.HtmlElement"]]],["^1@","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","~$goog.array","~$goog.asserts"]]],["^1@","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1@","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2K"]]],["^1@","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H"]]],["^1@","reagent/impl/util.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W","^J","^K","^2E"]]],["^1@","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["~:shadow.build.js-support/require","create-react-class"],["^E","shadow.js.shim.module$create_react_class.js","require","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","reagent/ratom.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W","^U","^J","^Z","~$clojure.set"]]],["^1@","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","reagent/impl/template.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W","^C","^2E","~$clojure.walk","^U","~$reagent.impl.component","^Z","^V","^K","^J"]]],["^1@","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H"]]],"~:SHADOW-TIMESTAMP",[1617461235000,1617461235000,1617461233000],["^1@","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","~$goog.reflect"]]],["^1@","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","~$goog.fs.blob","^2L","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2N","^2O","^2P","^2Q"]]],["^1@","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G","^2H","~$goog.html.SafeUrl","^2P","^2Q","^2K"]]],["^1@","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2Y","~$goog.html.SafeStyle","^2[","^2M","~$goog.html.uncheckedconversions","^2P","^2K"]]],["^1@","reagent/impl/component.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W","^E","^C","^U","^Z","^V","^K","^J"]]],["^1@","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W"]]],["^1@","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1@","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G","^2H","~$goog.dom.TagName","~$goog.dom.tags","^2Y","^33","~$goog.html.SafeStyleSheet","^2[","^2M","^2Z","^2N","^2O","~$goog.labs.userAgent.browser","^2J","^2P","^2Q","^2K"]]],["^1@","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2J"]]],["^1@","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G"]]],["^1@","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1@","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G","^2H","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1@","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",[]]],["^1@","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G","^2J"]]],["^1@","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W","^3=","~$goog.string.StringBuffer"]]],["^2R","react"],["^C","shadow.js.shim.module$react.js","require","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","~$goog.dom.safe","^34","^2P","^2K"]]],["^1@","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2K"]]],["^1@","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2G","^2H","^31","~$goog.math"]]],["^1@","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","^32","^2Y","^33","^39","^2[","^2M","^2P","^2K","^2N"]]],["^1@","reagent/dom.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W","^G","^U","^Y","^Z","^V","^J","^K"]]],["^1@","reagent/interop.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W"]]],["^1@","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","~$goog.math.Long","~$goog.math.Integer","^3=","^2J","^2G","~$goog.Uri","^3C"]]],["^1@","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2P","^2Q","^2Z","^2H"]]],["^1@","reagent/debug.cljs"],["41277a8c31d5c542a80638bdfa63e2ed5d9e872d","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W"]]],["^1@","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2P","^33","^2Q","^2G","^2J","^2H","^2K"]]],["^1@","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2W"]]],["^2R","react-dom"],["^G","shadow.js.shim.module$react_dom.js","require","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X"]]],["^1@","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^W"]]],["^1@","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","^3="]]],["^1@","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2A",["^ ","^2B",null,"^2C",["^N",[]],"^2D",["^X","^2H","^2Q"]]]]],"~:clj-info",["^ ","jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/reagent/reagent/0.8.0-alpha2/reagent-0.8.0-alpha2.jar!/reagent/interop.clj",1593253253000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/reagent/reagent/0.8.0-alpha2/reagent-0.8.0-alpha2.jar!/reagent/debug.clj",1593253253000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1592634582000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/reagent/reagent/0.8.0-alpha2/reagent-0.8.0-alpha2.jar!/reagent/ratom.clj",1593253253000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1617461233000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/dom.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J","~$$","^K","^L","^K"],"^M",["^N",[]],"~:shadow/js-access-properties",["^N",["findDOMNode","render","unmountComponentAtNode"]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^K","^K","^V","^V","^W","^W","^X","^X","^G","^G","^Y","^Y","^Z","^Z","^[","^U","^10","^Y","^11","^V","^12","^Z","^J","^J","^F","^G"],"^13",["^N",["^14"]],"~:shadow/js-access-global",["^N",["Error"]],"^15",null,"~:defs",["^ ","~$re-render-component",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/dom.cljs","^7",28,"^8",8,"^9",28,"^:",27,"~:private",true,"~:arglists",["^18",["~$quote",["^18",[["~$comp","~$container"]]]]]],"^4A",true,"^O","^27","^6","reagent/dom.cljs","^:",27,"~:method-params",["^18",[["^4D","^4E"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",28,"~:ret-tag","~$any","^9",28,"~:max-fixed-arity",2,"~:fn-var",true,"^4B",["^18",["^4C",["^18",[["^4D","^4E"]]]]]],"~$force-update-all",["^ ","^4@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",56,"^8",7,"^9",56,"^:",23,"^4B",["^18",["^4C",["^18",[[]]]]],"~:doc","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"^O","^2;","^6","reagent/dom.cljs","^:",23,"^4F",["^18",[[]]],"^4G",null,"^4H",["^18",[null,null]],"^8",1,"^4I",false,"^7",56,"^4J","~$string","^9",56,"^4L",0,"^4M",true,"^4B",["^18",["^4C",["^18",[[]]]]],"^4O","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"~$render-comp",["^ ","^4@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",18,"^8",8,"^9",18,"^:",19,"^4A",true,"^4B",["^18",["^4C",["^18",[["^4D","^4E","~$callback"]]]]]],"^4A",true,"^O","^2=","^6","reagent/dom.cljs","^:",19,"^4F",["^18",[["^4D","^4E","^4R"]]],"^4G",null,"^4H",["^18",[null,null]],"^8",1,"^4I",false,"^7",18,"^9",18,"^4L",3,"^4M",true,"^4B",["^18",["^4C",["^18",[["^4D","^4E","^4R"]]]]]],"~$imported",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",10,"^8",20,"^9",10,"^:",28,"^4A",true],"^4A",true,"^O","^1M","^6","reagent/dom.cljs","^:",28,"^8",1,"^7",10,"^9",10,"~:tag","~$clj-nil"],"~$unmount-component-at-node",["^ ","^4@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",46,"^8",7,"^9",46,"^:",32,"^4B",["^18",["^4C",["^18",[["^4E"]]]]]],"^O","^1N","^6","reagent/dom.cljs","^:",32,"^4F",["^18",[["^4E"]]],"^4G",null,"^4H",["^18",[null,null]],"^8",1,"^4I",false,"^7",46,"^4J","~$js","^9",46,"^4L",1,"^4M",true,"^4B",["^18",["^4C",["^18",[["^4E"]]]]]],"~$unmount-comp",["^ ","^4@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",14,"^8",8,"^9",14,"^:",20,"^4A",true,"^4B",["^18",["^4C",["^18",[["^4E"]]]]]],"^4A",true,"^O","^20","^6","reagent/dom.cljs","^:",20,"^4F",["^18",[["^4E"]]],"^4G",null,"^4H",["^18",[null,null]],"^8",1,"^4I",false,"^7",14,"^4J","^4W","^9",14,"^4L",1,"^4M",true,"^4B",["^18",["^4C",["^18",[["^4E"]]]]]],"~$roots",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",12,"^8",20,"^9",12,"^:",25,"^4A",true],"^4A",true,"^O","^1X","^6","reagent/dom.cljs","^:",25,"^8",1,"^7",12,"^9",12,"^4T","~$cljs.core/Atom"],"~$dom-node",["^ ","^4@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",49,"^8",7,"^9",49,"^:",15,"^4B",["^18",["^4C",["^18",[["~$this"]]]]],"^4O","Returns the root DOM node of a mounted component."],"^O","^28","^6","reagent/dom.cljs","^:",15,"^4F",["^18",[["^50"]]],"^4G",null,"^4H",["^18",[null,null]],"^8",1,"^4I",false,"^7",49,"^4J","^4W","^9",49,"^4L",1,"^4M",true,"^4B",["^18",["^4C",["^18",[["^50"]]]]],"^4O","Returns the root DOM node of a mounted component."],"~$render",["^ ","^4@",null,"^5",["^ ","^6","reagent/dom.cljs","^7",31,"^8",7,"^9",31,"^:",13,"^4B",["^18",["^4C",["^18",[["^4D","^4E"],["^4D","^4E","^4R"]]]]],"^4O","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.","~:top-fn",["^ ","^4I",false,"~:fixed-arity",3,"^4L",3,"^4F",[["^4D","^4E"],["^4D","^4E","^4R"]],"^4B",["^18",[["^4D","^4E"],["^4D","^4E","^4R"]]],"^4H",["^18",[null,null]]]],"^O","^21","^6","reagent/dom.cljs","^:",13,"^52",["^ ","^4I",false,"^53",3,"^4L",3,"^4F",[["^4D","^4E"],["^4D","^4E","^4R"]],"^4B",["^18",[["^4D","^4E"],["^4D","^4E","^4R"]]],"^4H",["^18",[null,null]]],"^4F",[["^4D","^4E"],["^4D","^4E","^4R"]],"^4G",null,"^53",3,"^4H",["^18",[null,null]],"^8",1,"^4I",false,"~:methods",[["^ ","^53",2,"^4I",false,"^4T","^4K"],["^ ","^53",3,"^4I",false,"^4T","^4K"]],"^7",31,"^9",31,"^4L",3,"^4M",true,"^4B",["^18",[["^4D","^4E"],["^4D","^4E","^4R"]]],"^4O","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance."]],"^16",["^ ","^J","^J","^K","^K","^W","^W","^V","^V","^11","^V"],"^1<",["^ ","^14",["^N",[]]],"^1=",["^ "],"^1>",["^X","^W","^G","^U","^Y","^Z","^V","^J","^K"]],"^R","^P","~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^2@",[["^57","~:static-fns"],true,["^57","~:shadow-tweaks"],null,["^57","~:source-map-inline"],null,["^57","~:elide-asserts"],false,["^57","~:optimize-constants"],null,["^57","^1C"],null,["^57","~:external-config"],null,["^57","~:tooling-config"],null,["^57","~:emit-constants"],null,["^57","~:load-tests"],null,["^57","~:form-size-threshold"],null,["^57","~:data-readers"],null,["^57","~:infer-externs"],"~:auto",["^57","^1E"],null,["~:js-options","~:js-provider"],"^14",["~:mode"],"~:dev",["^57","~:fn-invoke-direct"],null,["^57","~:source-map"],"/dev/null"]]]