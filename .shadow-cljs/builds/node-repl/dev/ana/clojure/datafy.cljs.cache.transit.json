["^ ","~:output",["^ ","~:js","goog.provide('clojure.datafy');\n/**\n * Attempts to return x as data.\n *   datafy will return the value of clojure.protocols/datafy. If\n *   the value has been transformed and the result supports\n *   metadata, :clojure.datafy/obj will be set on the metadata to the\n *   original value of x.\n */\nclojure.datafy.datafy = (function clojure$datafy$datafy(x){\nvar v = clojure.core.protocols.datafy(x);\nif((v === x)){\nreturn v;\n} else {\nif((((!((v == null))))?(((((v.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === v.cljs$core$IWithMeta$))))?true:false):false)){\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(v,cljs.core.assoc,new cljs.core.Keyword(\"clojure.datafy\",\"obj\",\"clojure.datafy/obj\",-330079421),x);\n} else {\nreturn v;\n}\n}\n});\n/**\n * Returns (possibly transformed) v in the context of coll and k (a\n *   key/index or nil). Callers should attempt to provide the key/index\n *   context k for Indexed/Associative/ILookup colls if possible, but not\n *   to fabricate one e.g. for sequences (pass nil). nav will return the\n *   value of clojure.core.protocols/nav.\n */\nclojure.datafy.nav = (function clojure$datafy$nav(coll,k,v){\nreturn clojure.core.protocols.nav(coll,k,v);\n});\nclojure.datafy.datify_ref = (function clojure$datafy$datify_ref(r){\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref(r)], null),cljs.core.meta(r));\n});\n(cljs.core.Var.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Var.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Reduced.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Reduced.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Atom.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Atom.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Volatile.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Volatile.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n\n(cljs.core.Delay.prototype.clojure$core$protocols$Datafiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Delay.prototype.clojure$core$protocols$Datafiable$datafy$arity$1 = (function (r){\nvar r__$1 = this;\nreturn clojure.datafy.datify_ref(r__$1);\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/datafy.cljs","~:line",11,"~:column",5,"~:end-line",11,"~:end-column",19,"~:doc","Functions to turn objects into data. Alpha, subject to change"],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$clojure.datafy","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.core.protocols","^L","~$p","^L","~$cljs.core","^M","~$goog","^N"],"~:seen",["^E",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M"],"~:form",["~#list",["~$ns","^G",["^T",["^P",["^L","~:as","~$p"]]]]],"~:flags",["^ ","^P",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^N","^M","^L"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","clojure/datafy.cljs"],"~:compiled-at",1622053777379,"~:resource-name","clojure/datafy.cljs","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns\n  ^{:doc \"Functions to turn objects into data. Alpha, subject to change\"}\n    clojure.datafy\n  (:require [clojure.core.protocols :as p]))\n\n(defn datafy\n  \"Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x.\"\n  [x]\n  (let [v (p/datafy x)]\n    (if (identical? v x)\n      v\n      (if (implements? IWithMeta v)\n        (vary-meta v assoc ::obj x\n                   ;; Circling back to this at a later date per @dnolen\n                   ;; ::class (-> x .-constructor .-name symbol)\n                   )\n        v))))\n\n(defn nav\n  \"Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav.\"\n  [coll k v]\n  (p/nav coll k v))\n\n(defn- datify-ref [r]\n  (with-meta [(deref r)] (meta r)))\n\n(extend-protocol p/Datafiable\n  Var\n  (datafy [r] (datify-ref r))\n\n  Reduced\n  (datafy [r] (datify-ref r))\n\n  Atom\n  (datafy [r] (datify-ref r))\n\n  Volatile\n  (datafy [r] (datify-ref r))\n\n  Delay\n  (datafy [r] (datify-ref r)))\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAaA;;;;;;;AAAA,AAAMA,AAMHC;AANH,AAOE,AAAMC,AAAE,AAACC,AAASF;AAAlB,AACE,AAAI,AAAYC,AAAED;AAChBC;;AACA,AAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAuBF,AAAAA,AAAAA;AACzB,AAAA,AAACG,AAAUH,AAAEI,AAAYL;;AAIzBC;;;;AAER;;;;;;;AAAA,AAAMK,AAMHC,AAAKC,AAAEP;AANV,AAOE,AAACQ,AAAMF,AAAKC,AAAEP;;AAEhB,AAAA,AAAOS,AAAYC;AAAnB,AACE,AAAA,AAACC,AAAW,AAACC,AAAMF,AAAI,AAACG,AAAKH;;AAE/B,AAAA,AAAA,AAAA,AAAA,AAAAR,AACEY;;AADF,AAAA,AAAA,AACEA,AACA,AAASJ;AAAT,AAAA,AAAA,AAASA;AAAT,AAAY,AAACD,AAAWC;;;AAF1B,AAAA,AAAA,AAAA,AAAAR,AAIEa;;AAJF,AAAA,AAAA,AAIEA,AACA,AAASL;AAAT,AAAA,AAAA,AAASA;AAAT,AAAY,AAACD,AAAWC;;;AAL1B,AAAA,AAAA,AAAA,AAAAR,AAOEc;;AAPF,AAAA,AAAA,AAOEA,AACA,AAASN;AAAT,AAAA,AAAA,AAASA;AAAT,AAAY,AAACD,AAAWC;;;AAR1B,AAAA,AAAA,AAAA,AAAAR,AAUEe;;AAVF,AAAA,AAAA,AAUEA,AACA,AAASP;AAAT,AAAA,AAAA,AAASA;AAAT,AAAY,AAACD,AAAWC;;;AAX1B,AAAA,AAAA,AAAA,AAAAR,AAaEgB;;AAbF,AAAA,AAAA,AAaEA,AACA,AAASR;AAAT,AAAA,AAAA,AAASA;AAAT,AAAY,AAACD,AAAWC","names",["clojure.datafy/datafy","x","v","clojure.core.protocols/datafy","cljs.core/PROTOCOL_SENTINEL","cljs.core.vary_meta","cljs.core/assoc","clojure.datafy/nav","coll","k","clojure.core.protocols/nav","clojure.datafy/datify-ref","r","cljs.core/with-meta","cljs.core/deref","cljs.core/meta","cljs.core/Var","cljs.core/Reduced","cljs.core/Atom","cljs.core/Volatile","cljs.core/Delay"]],"~:used-vars",["^E",["~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/Reduced","~$cljs.core/deref","~$cljs.core/Volatile","~$cljs.core/Delay","~$cljs.core/Var","~$clojure.datafy/nav","~$cljs.core/vary-meta","~$cljs.core/with-meta","~$clojure.datafy/datafy","~$cljs.core/meta","~$clojure.datafy/datify-ref","~$cljs.core/not","~$cljs.core/Atom","~$cljs.core/assoc","~$clojure.core.protocols/nav"]]],"~:cache-keys",["~#cmap",[["^[","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^E",[]],"~:deps-syms",["^N","~$goog.dom.HtmlElement"]]],["^[","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","~$goog.array","~$goog.asserts"]]],["^[","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^[","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1V"]]],["^[","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S"]]],["^[","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S"]]],"~:SHADOW-TIMESTAMP",[1617461235000,1617461235000,1617461233000],["^[","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","~$goog.reflect"]]],["^[","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","~$goog.fs.blob","^1W","~$goog.html.SafeScript","~$goog.html.trustedtypes","^1Y","^1Z","^1[","^20"]]],["^[","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R","^1S","~$goog.html.SafeUrl","^1[","^20","^1V"]]],["^[","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^24","~$goog.html.SafeStyle","^26","^1X","~$goog.html.uncheckedconversions","^1[","^1V"]]],["^[","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^[","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R","^1S","~$goog.dom.TagName","~$goog.dom.tags","^24","^2:","~$goog.html.SafeStyleSheet","^26","^1X","^25","^1Y","^1Z","~$goog.labs.userAgent.browser","^1U","^1[","^20","^1V"]]],["^[","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1U"]]],["^[","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R"]]],["^[","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^[","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R","^1S","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^[","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","clojure/core/protocols.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^M"]]],["^[","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",[]]],["^[","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R","^1U"]]],["^[","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","~$goog.dom.safe","^2;","^1[","^1V"]]],["^[","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1V"]]],["^[","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1R","^1S","^28","~$goog.math"]]],["^[","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","^29","^24","^2:","^2@","^26","^1X","^1[","^1V","^1Y"]]],["^[","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N"]]],["^[","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","~$goog.math.Long","~$goog.math.Integer","^2D","^1U","^1R","~$goog.Uri","~$goog.string.StringBuffer"]]],["^[","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1[","^20","^25","^1S"]]],["^[","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1[","^2:","^20","^1R","^1U","^1S","^1V"]]],["^[","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^22"]]],["^[","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","^2D"]]],["^[","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^1S","^20"]]],["^[","clojure/datafy.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^1M",["^ ","^1N",null,"^1O",["^E",[]],"^1P",["^N","^M","^L"]]]]],"~:clj-info",["^ ","jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1598693301000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1592634582000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1592572400000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1617461233000,"jar:file:/home/tvaisanen/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1617461233000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","clojure/datafy.cljs","^7",11,"^8",5,"^9",11,"^:",19,"^;","Functions to turn objects into data. Alpha, subject to change"],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",null,"^D",["^E",[]],"^F","^G","^J",null,"^K",["^ ","^L","^L","~$p","^L","^M","^M","^N","^N"],"^O",["^E",["^P"]],"^Q",null,"~:defs",["^ ","~$datafy",["^ ","~:protocol-inline",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",14,"^8",7,"^9",14,"^:",13,"~:arglists",["^T",["~$quote",["^T",[["~$x"]]]]],"^;","Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x."],"^F","^1D","^6","clojure/datafy.cljs","^:",13,"~:method-params",["^T",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^8",1,"~:variadic?",false,"^7",14,"~:ret-tag",["^E",["~$clj","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^9",14,"~:max-fixed-arity",1,"~:fn-var",true,"^3C",["^T",["^3D",["^T",[["~$x"]]]]],"^;","Attempts to return x as data.\n  datafy will return the value of clojure.protocols/datafy. If\n  the value has been transformed and the result supports\n  metadata, :clojure.datafy/obj will be set on the metadata to the\n  original value of x."],"~$nav",["^ ","^3B",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",31,"^8",7,"^9",31,"^:",10,"^3C",["^T",["^3D",["^T",[["~$coll","~$k","~$v"]]]]],"^;","Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav."],"^F","^1A","^6","clojure/datafy.cljs","^:",10,"^3E",["^T",[["^3Q","~$k","~$v"]]],"^3F",null,"^3G",["^T",[null,null]],"^8",1,"^3H",false,"^7",31,"^3I","^3K","^9",31,"^3N",3,"^3O",true,"^3C",["^T",["^3D",["^T",[["^3Q","~$k","~$v"]]]]],"^;","Returns (possibly transformed) v in the context of coll and k (a\n  key/index or nil). Callers should attempt to provide the key/index\n  context k for Indexed/Associative/ILookup colls if possible, but not\n  to fabricate one e.g. for sequences (pass nil). nav will return the\n  value of clojure.core.protocols/nav."],"~$datify-ref",["^ ","^3B",null,"^5",["^ ","^6","clojure/datafy.cljs","^7",40,"^8",8,"^9",40,"^:",18,"~:private",true,"^3C",["^T",["^3D",["^T",[["~$r"]]]]]],"^3S",true,"^F","^1F","^6","clojure/datafy.cljs","^:",18,"^3E",["^T",[["~$r"]]],"^3F",null,"^3G",["^T",[null,null]],"^8",1,"^3H",false,"^7",40,"^3I",["^E",["^3J","^3L","^3M"]],"^9",40,"^3N",1,"^3O",true,"^3C",["^T",["^3D",["^T",[["~$r"]]]]]]],"^R",["^ ","^M","^M"],"~:cljs.analyzer/constants",["^ ","^O",["^E",["~:clojure.datafy/obj"]],"~:order",["^3U"]],"^W",["^ ","^P",["^E",[]]],"^X",["^ "],"^Y",["^N","^M","^L"]],"^I","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^E",[]],"~:compiler-options",["^1L",[["^3Y","~:static-fns"],true,["^3Y","~:shadow-tweaks"],null,["^3Y","~:source-map-inline"],null,["^3Y","~:elide-asserts"],false,["^3Y","~:optimize-constants"],null,["^3Y","^12"],null,["^3Y","~:external-config"],null,["^3Y","~:tooling-config"],null,["^3Y","~:emit-constants"],null,["^3Y","~:load-tests"],null,["^3Y","~:form-size-threshold"],null,["^3Y","~:data-readers"],null,["^3Y","~:infer-externs"],"~:auto",["^3Y","^14"],null,["~:js-options","~:js-provider"],"^P",["~:mode"],"~:dev",["^3Y","~:fn-invoke-direct"],null,["^3Y","~:source-map"],"/dev/null"]]]